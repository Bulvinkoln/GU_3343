команды git:
git --version (проверить настроен ли git правильно)
git init (команда для начала отслеживания папки, предварительно нужно выбрать папку)
git status (проверить статус папки, есть ли в ней commit)
git add '.\Hello World.md' (добавить файлы для отслеживания - '.\Hello World.md' для примера)
git add . (добавить все файлы для отслеживания)
git rm --cached название файла.md убрать файл с репозитория в случае ошибочного его добавления
git commit --amend -m "перезаписать" перезаписать последний коммит
git commit --m "Создали новый файл" (сохранить изменения)
git log (какие версии файла существуют)
git log --oneline показать все коммиты
git checkout и первые 4 цифры commit  (перейти к определенному сохранению)
git checkout master (вернуть файл в исходное состояние)
git diff (разница между текущим состоянием файла и тем состоянием которое уже сохранено
git commit --amend -m "название коммента" (изменить коммент)
git branch название новой ветки (создать новую ветку)
git branch -d название ветки (удалить ветку)
git branch (показать ветки)
git checkout -b название ветки (создать и перейти на созданную ветку)
git checkout название ветки (перейти на ветку)
git merge название ветки (слияние ветки)
git merge --abort (отменяет последствия конфликта)
ctrl Z (вернуться на шаг назад), ctrl Y (вернуться из ctrl z)
touch название файла.расширение создать файл
echo "текст" > название файла.расширение (добавить текст в файл)
mkdir "название папки" (создать папку)
cd .. (выйти из папки)
git rebase -i хеш код комита перейти в редактор комитов
git rebase --abort (выйти из редактора комитов)
____________________________________________________

КОМАНДЫ ДЛЯ РАБОТЫ С УДАЛЕННЫМ РЕПОЗИТОРИЕМ
```
1. Создали аккаунт на Github.com
2. Создать локальный репозиторий
3. "Подружить" ваш локальный и удаленный репозиторий. Github при создании удаленного репозитория подскажет как это можно сделать )
4. Отправить (git push) ваш локальный репозиторий в удаленный (на Github) при этом возможно нужно будет авторизоваться на удаленном репозитории
5. Провести изменения с другого компьютера
6. Выкачать (git pull) актуальное состояние из удаленного репозитория
```

git push  (отправить изменения в удаленный репозиторий)
git pull (синхронизировать локальную версию с удаленной)
git clone <url адрес репозитория> (клонирование внешнего репозитория на локальный ПК)

Для предложения своих изменений в opensource проект:
1. Делаем fork(копию) интересующего нас репозитория
2. Мы делаем git clone для нашей версии этого репозитория
3. Мы создаем ветку с предлагаемыми изменениями
4. Производим все изменения только в этой ветке
5. Отправляем эти изменения на свой аккаунт (get push)
6. В окне на гитхаб появляется возможность отправить pull request